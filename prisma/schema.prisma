// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentStatus {
  PROCESSING
  COMPLETED
}

model Student {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Personal Details
  fullName             String
  dateOfBirth          DateTime
  countryOfCitizenship String
  referralCode         String?

  // Contact Information
  primaryPhone          String
  secondaryPhone        String?
  whatsappNotifications Boolean @default(false)
  email                 String  // Removed @unique constraint to allow multiple payments from same email
  residentialAddress    String
  city                  String
  state                 String
  zipCode               String
  country               String

  // Education
  highestQualification String
  specialization       String?

  // Professional
  currentProfession   String?
  currentOrganization String?
  linkedinProfile     String?

  // Identity Document
  idType        String
  idNumber      String
  idDocument    Bytes?  // Store ID document PDF as binary
  photo         Bytes?  // Store passport-size photo as binary
  idDocumentUrl String?
  photoUrl      String?

  // Program Selection
  type            String        // "program" or "freelancer"
  selectedProgram String        // Product ID from products.json
  programDuration Int           // Duration in months (1 for freelancer/one-time)
  programPrice    Float         // USD price
  selectedAddon   String?       // Addon ID from products.json (optional)
  addonPrice      Float?        // USD addon price (optional)
  
  invoiceNumber   String?       @unique // Invoice number format: SRT/INT/YYYYMMDD/XXXXXX
  programName     String?       // Actual program name from products.json
  addonName       String?       // Actual addon name from products.json
  subtotal        Float?        // Program price * duration + addon price (USD)
  gstRate         Float?        @default(18) // GST rate percentage
  gstAmount       Float?        // GST amount in USD
  totalAmount     Float?        // Total USD amount (subtotal + GST)

  exchangeRateUsed  Float?      // Store the USD to INR rate used at payment time
  programPriceINR   Float?      // Program price in INR at time of payment
  addonPriceINR     Float?      // Addon price in INR at time of payment
  subtotalINR       Float?      // Subtotal in INR
  gstAmountINR      Float?      // GST amount in INR
  totalINR          Float?      // Total amount in INR

  // Payment Details
  paymentId         String?
  paymentStatus     PaymentStatus @default(PROCESSING)
  paymentMethod     String?      // Payment method used (Razorpay, etc.)
  paymentDate       DateTime?    // When payment was completed
  razorpayOrderId   String?
  razorpayPaymentId String?
  razorpaySignature String?

  invoiceLink       String?      @unique // UUID for public invoice access

  // Confirmation
  agreedToTerms        Boolean @default(false)
  certifiedInformation Boolean @default(false)

  @@map("students")
}
